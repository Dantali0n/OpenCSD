/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __BPF_UBPF_PROGRAM_SKEL_H__
#define __BPF_UBPF_PROGRAM_SKEL_H__

#include <stdlib.h>
#include <bpf/libbpf.h>

struct bpf_ubpf_program {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_program *main;
	} progs;
	struct {
		struct bpf_link *main;
	} links;
};

static void
bpf_ubpf_program__destroy(struct bpf_ubpf_program *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
bpf_ubpf_program__create_skeleton(struct bpf_ubpf_program *obj);

static inline struct bpf_ubpf_program *
bpf_ubpf_program__open_opts(const struct bpf_object_open_opts *opts)
{
	struct bpf_ubpf_program *obj;

	obj = (struct bpf_ubpf_program *)calloc(1, sizeof(*obj));
	if (!obj)
		return NULL;
	if (bpf_ubpf_program__create_skeleton(obj))
		goto err;
	if (bpf_object__open_skeleton(obj->skeleton, opts))
		goto err;

	return obj;
err:
	bpf_ubpf_program__destroy(obj);
	return NULL;
}

static inline struct bpf_ubpf_program *
bpf_ubpf_program__open(void)
{
	return bpf_ubpf_program__open_opts(NULL);
}

static inline int
bpf_ubpf_program__load(struct bpf_ubpf_program *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct bpf_ubpf_program *
bpf_ubpf_program__open_and_load(void)
{
	struct bpf_ubpf_program *obj;

	obj = bpf_ubpf_program__open();
	if (!obj)
		return NULL;
	if (bpf_ubpf_program__load(obj)) {
		bpf_ubpf_program__destroy(obj);
		return NULL;
	}
	return obj;
}

static inline int
bpf_ubpf_program__attach(struct bpf_ubpf_program *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
bpf_ubpf_program__detach(struct bpf_ubpf_program *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline int
bpf_ubpf_program__create_skeleton(struct bpf_ubpf_program *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		return -1;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "bpf_ubpf_program";
	s->obj = &obj->obj;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "main";
	s->progs[0].prog = &obj->progs.main;
	s->progs[0].link = &obj->links.main;

	s->data_sz = 3456;
	s->data = (void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x80\x09\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x10\0\
\x01\0\x85\0\0\0\x01\0\0\0\x85\0\0\0\x02\0\0\0\xbf\xa1\0\0\0\0\0\0\x07\x01\0\0\
\xf8\xff\xff\xff\x85\0\0\0\x03\0\0\0\x79\xa0\xf8\xff\0\0\0\0\x95\0\0\0\0\0\0\0\
\x01\x11\x01\x25\x0e\x13\x05\x03\x0e\x10\x17\x1b\x0e\x11\x01\x12\x06\0\0\x02\
\x34\0\x03\x0e\x49\x13\x3a\x0b\x3b\x0b\0\0\x03\x0f\0\x49\x13\0\0\x04\x15\0\x27\
\x19\0\0\x05\x15\0\x49\x13\x27\x19\0\0\x06\x16\0\x49\x13\x03\x0e\x3a\x0b\x3b\
\x0b\0\0\x07\x24\0\x03\x0e\x3e\x0b\x0b\x0b\0\0\x08\x15\x01\x27\x19\0\0\x09\x05\
\0\x49\x13\0\0\x0a\x13\x01\x03\x0e\x0b\x0b\x3a\x0b\x3b\x0b\0\0\x0b\x0d\0\x03\
\x0e\x49\x13\x3a\x0b\x3b\x0b\x38\x0b\0\0\x0c\x2e\x01\x11\x01\x12\x06\x40\x18\
\x97\x42\x19\x03\x0e\x3a\x0b\x3b\x0b\x49\x13\x3f\x19\0\0\x0d\x34\0\x02\x18\x03\
\x0e\x3a\x0b\x3b\x0b\x49\x13\0\0\x0e\x34\0\x03\x0e\x3a\x0b\x3b\x0b\x49\x13\0\0\
\0\xd5\0\0\0\x04\0\0\0\0\0\x08\x01\0\0\0\0\x0c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x38\0\0\0\x02\0\0\0\0\x35\0\0\0\x01\x20\x03\x3a\0\0\0\x04\x02\0\0\0\
\0\x46\0\0\0\x01\x22\x03\x4b\0\0\0\x05\x50\0\0\0\x06\x5b\0\0\0\0\0\0\0\x03\x1b\
\x06\x66\0\0\0\0\0\0\0\x02\x30\x07\0\0\0\0\x07\x08\x02\0\0\0\0\x78\0\0\0\x01\
\x24\x03\x7d\0\0\0\x08\x09\x84\0\0\0\0\x03\x89\0\0\0\x0a\0\0\0\0\x08\x01\x1b\
\x0b\0\0\0\0\x50\0\0\0\x01\x1c\0\0\x0c\0\0\0\0\0\0\0\0\x38\0\0\0\x01\x5a\0\0\0\
\0\x01\x26\xd1\0\0\0\x0d\x02\x91\0\0\0\0\0\x01\x2c\x89\0\0\0\x0e\0\0\0\0\x01\
\x2a\x50\0\0\0\0\x07\0\0\0\0\x05\x04\0\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\
\x69\x6f\x6e\x20\x31\x31\x2e\x31\x2e\x30\0\x75\x62\x70\x66\x2f\x68\x65\x6c\x6c\
\x6f\x5f\x77\x6f\x72\x6c\x64\x2e\x63\0\x2f\x68\x6f\x6d\x65\x2f\x63\x6f\x72\x6e\
\x65\x2f\x70\x72\x6f\x6a\x65\x63\x74\x73\x2f\x76\x75\x2f\x71\x65\x6d\x75\x2d\
\x63\x73\x64\x2f\x70\x6c\x61\x79\x67\x72\x6f\x75\x6e\x64\0\x62\x70\x66\x5f\x72\
\x65\x67\x69\x73\x74\x65\x72\x5f\x74\x65\x73\x74\0\x62\x70\x66\x5f\x6b\x74\x69\
\x6d\x65\x5f\x67\x65\x74\x5f\x6e\x73\0\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\x20\
\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\x5f\x75\x69\x6e\x74\x36\
\x34\x5f\x74\0\x75\x69\x6e\x74\x36\x34\x5f\x74\0\x62\x70\x66\x5f\x73\x74\x72\
\x75\x63\x74\x5f\x74\x65\x73\x74\0\x64\x61\x74\x61\0\x62\x70\x66\x5f\x64\x61\
\x74\x61\0\x6d\x61\x69\x6e\0\x69\x6e\x74\0\x74\x65\x73\x74\0\x9f\xeb\x01\0\x18\
\0\0\0\0\0\0\0\x28\0\0\0\x28\0\0\0\xb6\0\0\0\0\0\0\0\0\0\0\x0d\x02\0\0\0\x01\0\
\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\x05\0\0\0\x01\0\0\x0c\x01\0\0\0\0\x69\x6e\
\x74\0\x6d\x61\x69\x6e\0\x2e\x74\x65\x78\x74\0\x2f\x68\x6f\x6d\x65\x2f\x63\x6f\
\x72\x6e\x65\x2f\x70\x72\x6f\x6a\x65\x63\x74\x73\x2f\x76\x75\x2f\x71\x65\x6d\
\x75\x2d\x63\x73\x64\x2f\x70\x6c\x61\x79\x67\x72\x6f\x75\x6e\x64\x2f\x75\x62\
\x70\x66\x2f\x68\x65\x6c\x6c\x6f\x5f\x77\x6f\x72\x6c\x64\x2e\x63\0\x09\x62\x70\
\x66\x5f\x72\x65\x67\x69\x73\x74\x65\x72\x5f\x74\x65\x73\x74\x28\x29\x3b\0\x09\
\x75\x69\x6e\x74\x36\x34\x5f\x74\x20\x74\x65\x73\x74\x20\x3d\x20\x62\x70\x66\
\x5f\x6b\x74\x69\x6d\x65\x5f\x67\x65\x74\x5f\x6e\x73\x28\x29\x3b\0\x09\x62\x70\
\x66\x5f\x73\x74\x72\x75\x63\x74\x5f\x74\x65\x73\x74\x28\x26\x64\x61\x74\x61\
\x29\x3b\0\x09\x72\x65\x74\x75\x72\x6e\x20\x64\x61\x74\x61\x2e\x64\x61\x74\x61\
\x3b\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\x6c\0\0\0\x80\0\0\0\
\0\0\0\0\x08\0\0\0\x0a\0\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\x10\0\0\0\x0a\0\0\0\
\x06\0\0\0\0\0\0\0\x10\0\0\0\x4f\0\0\0\x02\xa0\0\0\x08\0\0\0\x10\0\0\0\x65\0\0\
\0\x12\xa8\0\0\x18\0\0\0\x10\0\0\0\x4f\0\0\0\x02\xa0\0\0\x20\0\0\0\x10\0\0\0\
\x8a\0\0\0\x02\xb8\0\0\x28\0\0\0\x10\0\0\0\xa3\0\0\0\x0e\xc0\0\0\x30\0\0\0\x10\
\0\0\0\xa3\0\0\0\x02\xc0\0\0\0\0\0\0\0\x0c\0\0\0\xff\xff\xff\xff\x04\0\x08\0\
\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x38\0\0\0\0\0\0\0\x8b\0\0\0\
\x04\0\x59\0\0\0\x08\x01\x01\xfb\x0e\x0d\0\x01\x01\x01\x01\0\0\0\x01\0\0\x01\
\x75\x62\x70\x66\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\x75\x64\x65\x2f\x62\x69\
\x74\x73\0\0\x68\x65\x6c\x6c\x6f\x5f\x77\x6f\x72\x6c\x64\x2e\x63\0\x01\0\0\x74\
\x79\x70\x65\x73\x2e\x68\0\x02\0\0\x73\x74\x64\x69\x6e\x74\x2d\x75\x69\x6e\x74\
\x6e\x2e\x68\0\x02\0\0\0\0\x09\x02\0\0\0\0\0\0\0\0\x03\x25\x01\x05\x02\x0a\x14\
\x05\x12\x22\x06\x03\x56\x20\x05\x02\x06\x03\x28\x20\x26\x05\x0e\x22\x05\x02\
\x06\x20\x02\x01\0\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x71\0\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\x15\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x06\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\x54\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\x66\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x06\0\x99\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\x8e\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\x77\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x06\0\xa2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\xb7\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\xb2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x06\0\xc0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\xc9\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x06\0\xc5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x03\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0a\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x03\0\x0c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3d\0\0\0\x12\0\x02\0\0\
\0\0\0\0\0\0\0\x38\0\0\0\0\0\0\0\x06\0\0\0\0\0\0\0\x0a\0\0\0\x11\0\0\0\x0c\0\0\
\0\0\0\0\0\x0a\0\0\0\x02\0\0\0\x12\0\0\0\0\0\0\0\x0a\0\0\0\x03\0\0\0\x16\0\0\0\
\0\0\0\0\x0a\0\0\0\x13\0\0\0\x1a\0\0\0\0\0\0\0\x0a\0\0\0\x04\0\0\0\x1e\0\0\0\0\
\0\0\0\x01\0\0\0\x10\0\0\0\x2b\0\0\0\0\0\0\0\x0a\0\0\0\x05\0\0\0\x3c\0\0\0\0\0\
\0\0\x0a\0\0\0\x06\0\0\0\x55\0\0\0\0\0\0\0\x0a\0\0\0\x07\0\0\0\x60\0\0\0\0\0\0\
\0\x0a\0\0\0\x08\0\0\0\x67\0\0\0\0\0\0\0\x0a\0\0\0\x09\0\0\0\x6e\0\0\0\0\0\0\0\
\x0a\0\0\0\x0a\0\0\0\x8a\0\0\0\0\0\0\0\x0a\0\0\0\x0b\0\0\0\x92\0\0\0\0\0\0\0\
\x0a\0\0\0\x0c\0\0\0\x9f\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\xad\0\0\0\0\0\0\0\
\x0a\0\0\0\x0d\0\0\0\xbb\0\0\0\0\0\0\0\x0a\0\0\0\x0c\0\0\0\xc6\0\0\0\0\0\0\0\
\x0a\0\0\0\x0e\0\0\0\xd2\0\0\0\0\0\0\0\x0a\0\0\0\x0f\0\0\0\x2c\0\0\0\0\0\0\0\0\
\0\0\0\x10\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\x50\0\0\0\0\0\0\0\0\0\0\0\
\x10\0\0\0\x60\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\x70\0\0\0\0\0\0\0\0\0\0\0\x10\0\
\0\0\x80\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\x90\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\
\x14\0\0\0\0\0\0\0\x0a\0\0\0\x12\0\0\0\x18\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\
\x66\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\
\x62\x72\x65\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\
\x65\x78\x74\0\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\0\x2e\x72\x65\x6c\x2e\
\x64\x65\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\x6d\x61\x69\x6e\0\x2e\x6c\x6c\x76\
\x6d\x5f\x61\x64\x64\x72\x73\x69\x67\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\
\x5f\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x66\x72\x61\
\x6d\x65\0\x68\x65\x6c\x6c\x6f\x5f\x77\x6f\x72\x6c\x64\x2e\x63\0\x2e\x73\x74\
\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x42\x54\x46\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7f\0\0\0\x03\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\xe8\x08\0\0\0\0\0\0\x94\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x40\0\0\0\0\0\0\0\x38\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x78\0\0\0\0\
\0\0\0\xae\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x31\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x26\x01\0\0\0\0\0\0\xd9\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2d\0\0\0\x09\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x07\0\0\0\0\0\0\x30\x01\0\0\0\0\0\0\x0f\0\
\0\0\x04\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x22\0\0\0\x01\0\0\0\x30\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\xff\x01\0\0\0\0\0\0\xce\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x8f\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\xcd\x02\0\0\0\0\0\0\xf6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc3\
\x03\0\0\0\0\0\0\xa0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x15\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x48\x08\0\0\0\0\0\0\
\x70\0\0\0\0\0\0\0\x0f\0\0\0\x08\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x64\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x68\x04\0\0\0\0\0\0\x28\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x60\0\0\0\x09\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb8\x08\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x0f\0\0\
\0\x0a\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x54\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x90\x04\0\0\0\0\0\0\x8f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x50\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\xd8\x08\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x0f\0\0\0\x0c\0\0\0\x08\0\0\0\0\
\0\0\0\x10\0\0\0\0\0\0\0\x42\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\
\0\0\0\xe8\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x87\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x20\x05\0\
\0\0\0\0\0\xf8\x01\0\0\0\0\0\0\x01\0\0\0\x14\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\
\0\0\0\0";

	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -1;
}

#endif /* __BPF_UBPF_PROGRAM_SKEL_H__ */
